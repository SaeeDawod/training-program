{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_player2",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "board",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "boardSize",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPlayer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "row",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "column",
          "type": "uint8"
        }
      ],
      "name": "makeMove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "player1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "player2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xada5d0a2e05f4c8d2d40783ba7001d999848c3a31c19a6e3e64780e3a5784409",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "1006168",
    "logsBloom": "0x
    "blockHash": "0x6748e1c1de1060df1e25949f060e1d036c28f532c1ba8c8464c7c9e1a56fc820",
    "transactionHash": "0xada5d0a2e05f4c8d2d40783ba7001d999848c3a31c19a6e3e64780e3a5784409",
    "logs": [],
    "blockNumber": 3,
    "cumulativeGasUsed": "1006168",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x70997970C51812dc3A010C7d01b50e0d17dc79C8"
  ],
  "numDeployments": 1,
  "solcInputHash": "f5ba3cb65acad8a291e277174cb05685",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player2\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"board\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boardSize\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"row\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"column\",\"type\":\"uint8\"}],\"name\":\"makeMove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TicTacToe.sol\":\"TicTacToe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TicTacToe.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ncontract TicTacToe {\\n    uint8 public boardSize = 3;\\n    uint8[3][3] public board;\\n\\n    address public player1;\\n    address public player2;\\n\\n    address public currentPlayer;\\n\\n    constructor(address _player2) {\\n        player1 = msg.sender;\\n        player2 = _player2;\\n        currentPlayer = player1;\\n    }\\n\\n    function joinGame() public {\\n        require(msg.sender == player2, \\\"Only the second player can join the game.\\\");\\n    }\\n\\n    function makeMove(uint8 row, uint8 column) public {\\n        require(row < boardSize && column < boardSize, \\\"Move is out of bounds.\\\");\\n        require(board[row][column] == 0, \\\"Spot is already taken.\\\");\\n        require(msg.sender == currentPlayer, \\\"It's not your turn.\\\");\\n\\n        board[row][column] = currentPlayer == player1 ? 1 : 2;\\n\\n        if (checkWin()) {\\n            resetBoard();\\n            // Optionally, you can emit an event here to notify that the game is won and the board is reset.\\n        } else {\\n            currentPlayer = currentPlayer == player1 ? player2 : player1;\\n        }\\n    }\\n\\n    function checkWin() internal view returns (bool) {\\n        uint8 player = currentPlayer == player1 ? 1 : 2;\\n\\n        // Check rows and columns\\n        for (uint8 i = 0; i < boardSize; i++) {\\n            if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {\\n                return true;\\n            }\\n            if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {\\n                return true;\\n            }\\n        }\\n\\n        // Check diagonals\\n        if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {\\n            return true;\\n        }\\n        if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {\\n            return true;\\n        }\\n\\n        return false;\\n    }\\n\\n    function resetBoard() internal {\\n        for (uint8 i = 0; i < boardSize; i++) {\\n            for (uint8 j = 0; j < boardSize; j++) {\\n                board[i][j] = 0;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdf6f57f383b8a22512a66064d545b56faddf91d848dd99564b9627a2fab64b6f\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405260036000806101000a81548160ff021916908360ff1602179055503480156200002c57600080fd5b5060405162001175380380620011758339818101604052810190620000529190620001a8565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001da565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001708262000143565b9050919050565b620001828162000163565b81146200018e57600080fd5b50565b600081519050620001a28162000177565b92915050565b600060208284031215620001c157620001c06200013e565b5b6000620001d18482850162000191565b91505092915050565b610f8b80620001ea6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638086a92a1161005b5780638086a92a146100da578063c51d69f41461010a578063d30895e414610128578063d4f77b1c146101465761007d565b80634404a4381461008257806359a5f12d146100a05780635e24b0f1146100be575b600080fd5b61008a610150565b6040516100979190610bae565b60405180910390f35b6100a8610176565b6040516100b59190610bae565b60405180910390f35b6100d860048036038101906100d39190610c07565b61019c565b005b6100f460048036038101906100ef9190610c7d565b610517565b6040516101019190610ccc565b60405180910390f35b610112610553565b60405161011f9190610ccc565b60405180910390f35b610130610564565b60405161013d9190610bae565b60405180910390f35b61014e61058a565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900460ff1660ff168260ff161080156101d0575060008054906101000a900460ff1660ff168160ff16105b61020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610d44565b60405180910390fd5b600060018360ff166003811061022857610227610d64565b5b018260ff166003811061023e5761023d610d64565b5b602091828204019190069054906101000a900460ff1660ff1614610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e90610ddf565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e90610e4b565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a55760026103a8565b60015b60018360ff16600381106103bf576103be610d64565b5b018260ff16600381106103d5576103d4610d64565b5b602091828204019190066101000a81548160ff021916908360ff1602179055506103fd61061c565b1561040f5761040a610ab8565b610513565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104ae57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104d2565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b6001826003811061052757600080fd5b01816003811061053657600080fd5b60209182820401919006915091509054906101000a900460ff1681565b60008054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610edd565b60405180910390fd5b565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069d5760026106a0565b60015b905060005b60008054906101000a900460ff1660ff168160ff1610156108c8578160ff1660018260ff16600381106106db576106da610d64565b5b016000600381106106ef576106ee610d64565b5b602091828204019190069054906101000a900460ff1660ff1614801561075a57508160ff1660018260ff166003811061072b5761072a610d64565b5b0160016003811061073f5761073e610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b80156107ab57508160ff1660018260ff166003811061077c5761077b610d64565b5b016002600381106107905761078f610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b156107bb57600192505050610ab5565b8160ff1660016000600381106107d4576107d3610d64565b5b018260ff16600381106107ea576107e9610d64565b5b602091828204019190069054906101000a900460ff1660ff1614801561085457508160ff166001806003811061082357610822610d64565b5b018260ff166003811061083957610838610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b80156108a557508160ff16600160026003811061087457610873610d64565b5b018260ff166003811061088a57610889610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b156108b557600192505050610ab5565b80806108c090610f2c565b9150506106a5565b508060ff1660016000600381106108e2576108e1610d64565b5b016000600381106108f6576108f5610d64565b5b602091828204019190069054906101000a900460ff1660ff1614801561095e57508060ff166001806003811061092f5761092e610d64565b5b0160016003811061094357610942610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b80156109ad57508060ff16600160026003811061097e5761097d610d64565b5b0160026003811061099257610991610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b156109bc576001915050610ab5565b8060ff1660016000600381106109d5576109d4610d64565b5b016002600381106109e9576109e8610d64565b5b602091828204019190069054906101000a900460ff1660ff16148015610a5157508060ff1660018060038110610a2257610a21610d64565b5b01600160038110610a3657610a35610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b8015610aa057508060ff166001600260038110610a7157610a70610d64565b5b01600060038110610a8557610a84610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b15610aaf576001915050610ab5565b60009150505b90565b60005b60008054906101000a900460ff1660ff168160ff161015610b6a5760005b60008054906101000a900460ff1660ff168160ff161015610b5657600060018360ff1660038110610b0d57610b0c610d64565b5b018260ff1660038110610b2357610b22610d64565b5b602091828204019190066101000a81548160ff021916908360ff1602179055508080610b4e90610f2c565b915050610ad9565b508080610b6290610f2c565b915050610abb565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9882610b6d565b9050919050565b610ba881610b8d565b82525050565b6000602082019050610bc36000830184610b9f565b92915050565b600080fd5b600060ff82169050919050565b610be481610bce565b8114610bef57600080fd5b50565b600081359050610c0181610bdb565b92915050565b60008060408385031215610c1e57610c1d610bc9565b5b6000610c2c85828601610bf2565b9250506020610c3d85828601610bf2565b9150509250929050565b6000819050919050565b610c5a81610c47565b8114610c6557600080fd5b50565b600081359050610c7781610c51565b92915050565b60008060408385031215610c9457610c93610bc9565b5b6000610ca285828601610c68565b9250506020610cb385828601610c68565b9150509250929050565b610cc681610bce565b82525050565b6000602082019050610ce16000830184610cbd565b92915050565b600082825260208201905092915050565b7f4d6f7665206973206f7574206f6620626f756e64732e00000000000000000000600082015250565b6000610d2e601683610ce7565b9150610d3982610cf8565b602082019050919050565b60006020820190508181036000830152610d5d81610d21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f53706f7420697320616c72656164792074616b656e2e00000000000000000000600082015250565b6000610dc9601683610ce7565b9150610dd482610d93565b602082019050919050565b60006020820190508181036000830152610df881610dbc565b9050919050565b7f49742773206e6f7420796f7572207475726e2e00000000000000000000000000600082015250565b6000610e35601383610ce7565b9150610e4082610dff565b602082019050919050565b60006020820190508181036000830152610e6481610e28565b9050919050565b7f4f6e6c7920746865207365636f6e6420706c617965722063616e206a6f696e2060008201527f7468652067616d652e0000000000000000000000000000000000000000000000602082015250565b6000610ec7602983610ce7565b9150610ed282610e6b565b604082019050919050565b60006020820190508181036000830152610ef681610eba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3782610bce565b915060ff8203610f4a57610f49610efd565b5b60018201905091905056fea2646970667358221220d7c073ce54104c197d3ddcab666244e0068d4f50de949b2b93bbe246e047bf9f64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638086a92a1161005b5780638086a92a146100da578063c51d69f41461010a578063d30895e414610128578063d4f77b1c146101465761007d565b80634404a4381461008257806359a5f12d146100a05780635e24b0f1146100be575b600080fd5b61008a610150565b6040516100979190610bae565b60405180910390f35b6100a8610176565b6040516100b59190610bae565b60405180910390f35b6100d860048036038101906100d39190610c07565b61019c565b005b6100f460048036038101906100ef9190610c7d565b610517565b6040516101019190610ccc565b60405180910390f35b610112610553565b60405161011f9190610ccc565b60405180910390f35b610130610564565b60405161013d9190610bae565b60405180910390f35b61014e61058a565b005b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900460ff1660ff168260ff161080156101d0575060008054906101000a900460ff1660ff168160ff16105b61020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610d44565b60405180910390fd5b600060018360ff166003811061022857610227610d64565b5b018260ff166003811061023e5761023d610d64565b5b602091828204019190069054906101000a900460ff1660ff1614610297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028e90610ddf565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e90610e4b565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103a55760026103a8565b60015b60018360ff16600381106103bf576103be610d64565b5b018260ff16600381106103d5576103d4610d64565b5b602091828204019190066101000a81548160ff021916908360ff1602179055506103fd61061c565b1561040f5761040a610ab8565b610513565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104ae57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104d2565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b6001826003811061052757600080fd5b01816003811061053657600080fd5b60209182820401919006915091509054906101000a900460ff1681565b60008054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061190610edd565b60405180910390fd5b565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461069d5760026106a0565b60015b905060005b60008054906101000a900460ff1660ff168160ff1610156108c8578160ff1660018260ff16600381106106db576106da610d64565b5b016000600381106106ef576106ee610d64565b5b602091828204019190069054906101000a900460ff1660ff1614801561075a57508160ff1660018260ff166003811061072b5761072a610d64565b5b0160016003811061073f5761073e610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b80156107ab57508160ff1660018260ff166003811061077c5761077b610d64565b5b016002600381106107905761078f610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b156107bb57600192505050610ab5565b8160ff1660016000600381106107d4576107d3610d64565b5b018260ff16600381106107ea576107e9610d64565b5b602091828204019190069054906101000a900460ff1660ff1614801561085457508160ff166001806003811061082357610822610d64565b5b018260ff166003811061083957610838610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b80156108a557508160ff16600160026003811061087457610873610d64565b5b018260ff166003811061088a57610889610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b156108b557600192505050610ab5565b80806108c090610f2c565b9150506106a5565b508060ff1660016000600381106108e2576108e1610d64565b5b016000600381106108f6576108f5610d64565b5b602091828204019190069054906101000a900460ff1660ff1614801561095e57508060ff166001806003811061092f5761092e610d64565b5b0160016003811061094357610942610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b80156109ad57508060ff16600160026003811061097e5761097d610d64565b5b0160026003811061099257610991610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b156109bc576001915050610ab5565b8060ff1660016000600381106109d5576109d4610d64565b5b016002600381106109e9576109e8610d64565b5b602091828204019190069054906101000a900460ff1660ff16148015610a5157508060ff1660018060038110610a2257610a21610d64565b5b01600160038110610a3657610a35610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b8015610aa057508060ff166001600260038110610a7157610a70610d64565b5b01600060038110610a8557610a84610d64565b5b602091828204019190069054906101000a900460ff1660ff16145b15610aaf576001915050610ab5565b60009150505b90565b60005b60008054906101000a900460ff1660ff168160ff161015610b6a5760005b60008054906101000a900460ff1660ff168160ff161015610b5657600060018360ff1660038110610b0d57610b0c610d64565b5b018260ff1660038110610b2357610b22610d64565b5b602091828204019190066101000a81548160ff021916908360ff1602179055508080610b4e90610f2c565b915050610ad9565b508080610b6290610f2c565b915050610abb565b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b9882610b6d565b9050919050565b610ba881610b8d565b82525050565b6000602082019050610bc36000830184610b9f565b92915050565b600080fd5b600060ff82169050919050565b610be481610bce565b8114610bef57600080fd5b50565b600081359050610c0181610bdb565b92915050565b60008060408385031215610c1e57610c1d610bc9565b5b6000610c2c85828601610bf2565b9250506020610c3d85828601610bf2565b9150509250929050565b6000819050919050565b610c5a81610c47565b8114610c6557600080fd5b50565b600081359050610c7781610c51565b92915050565b60008060408385031215610c9457610c93610bc9565b5b6000610ca285828601610c68565b9250506020610cb385828601610c68565b9150509250929050565b610cc681610bce565b82525050565b6000602082019050610ce16000830184610cbd565b92915050565b600082825260208201905092915050565b7f4d6f7665206973206f7574206f6620626f756e64732e00000000000000000000600082015250565b6000610d2e601683610ce7565b9150610d3982610cf8565b602082019050919050565b60006020820190508181036000830152610d5d81610d21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f53706f7420697320616c72656164792074616b656e2e00000000000000000000600082015250565b6000610dc9601683610ce7565b9150610dd482610d93565b602082019050919050565b60006020820190508181036000830152610df881610dbc565b9050919050565b7f49742773206e6f7420796f7572207475726e2e00000000000000000000000000600082015250565b6000610e35601383610ce7565b9150610e4082610dff565b602082019050919050565b60006020820190508181036000830152610e6481610e28565b9050919050565b7f4f6e6c7920746865207365636f6e6420706c617965722063616e206a6f696e2060008201527f7468652067616d652e0000000000000000000000000000000000000000000000602082015250565b6000610ec7602983610ce7565b9150610ed282610e6b565b604082019050919050565b60006020820190508181036000830152610ef681610eba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f3782610bce565b915060ff8203610f4a57610f49610efd565b5b60018201905091905056fea2646970667358221220d7c073ce54104c197d3ddcab666244e0068d4f50de949b2b93bbe246e047bf9f64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 891,
        "contract": "contracts/TicTacToe.sol:TicTacToe",
        "label": "boardSize",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 897,
        "contract": "contracts/TicTacToe.sol:TicTacToe",
        "label": "board",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_array(t_uint8)3_storage)3_storage"
      },
      {
        "astId": 899,
        "contract": "contracts/TicTacToe.sol:TicTacToe",
        "label": "player1",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 901,
        "contract": "contracts/TicTacToe.sol:TicTacToe",
        "label": "player2",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 903,
        "contract": "contracts/TicTacToe.sol:TicTacToe",
        "label": "currentPlayer",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_array(t_uint8)3_storage)3_storage": {
        "base": "t_array(t_uint8)3_storage",
        "encoding": "inplace",
        "label": "uint8[3][3]",
        "numberOfBytes": "96"
      },
      "t_array(t_uint8)3_storage": {
        "base": "t_uint8",
        "encoding": "inplace",
        "label": "uint8[3]",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}